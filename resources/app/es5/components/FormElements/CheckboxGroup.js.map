{"version":3,"sources":["components/FormElements/CheckboxGroup.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,yCAAoD;AAEpD,qDAAgD;AAQhD,IAAM,aAAa,GAA4B,UAAC,KAAK;IAC7C,IAAA,uBAAO,EAAE,yBAAQ,EAAE,gBAAoB,EAAZ,gBAAK,EAAE,cAAK,CAAU;IAExD,OAAO,CACN,oBAAC,KAAK,CAAC,QAAQ,QAEb,OAAO,CAAC,GAAG,CAAC,UAAC,MAAc,EAAE,KAAa,IAAK,OAAA,CAC9C,oBAAC,kBAAK,IACL,SAAS,EAAE,yBAAe,EAC1B,WAAW,EAAE,MAAM,EACnB,GAAG,EAAE,KAAK,EACV,QAAQ,EAAE,QAAQ,EAClB,KAAK,EAAE,EAAC,MAAM,EAAE,OAAO,EAAC,EACxB,IAAI,EAAK,IAAI,SAAI,MAAM,MAAG,EAC1B,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,GACvB,CACF,EAV8C,CAU9C,CAAC,CAEa,CACjB,CAAC;AACH,CAAC,CAAC;AAEF,kBAAe,aAAa,CAAC","file":"CheckboxGroup.js","sourcesContent":["import * as React from 'react';\r\nimport {WrappedFieldProps, Field} from 'redux-form';\r\n\r\nimport CheckboxElement from './CheckboxElement';\r\n\r\n\r\ntype IElementProps = WrappedFieldProps & React.InputHTMLAttributes<HTMLInputElement> & {\r\n\toptions: Array<string>,\r\n\tformName: string\r\n};\r\n\r\nconst CheckboxGroup: React.FC<IElementProps> = (props) => {\r\n\tconst {options, formName, input: {value, name}} = props;\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\toptions.map((option: string, index: number) => (\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tcomponent={CheckboxElement}\r\n\t\t\t\t\t\tplaceholder={option}\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tformName={formName}\r\n\t\t\t\t\t\tstyle={{margin: '5px 0'}}\r\n\t\t\t\t\t\tname={`${name}[${option}]`}\r\n\t\t\t\t\t\tchecked={!!value[option]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default CheckboxGroup;\r\n"]}