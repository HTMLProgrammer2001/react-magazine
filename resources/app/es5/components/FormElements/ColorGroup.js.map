{"version":3,"sources":["components/FormElements/ColorGroup.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,yCAAoD;AAEpD,+CAA0C;AAO1C,IAAM,UAAU,GAA4B,UAAC,KAAK;IAC1C,IAAA,qBAAM,EAAE,gBAAoB,EAAZ,gBAAK,EAAE,cAAK,CAAU;IAE7C,OAAO,CACN,oBAAC,KAAK,CAAC,QAAQ,QAEb,MAAM,CAAC,GAAG,CAAC,UAAC,KAAa,EAAE,KAAa,IAAK,OAAA,CAC5C,oBAAC,kBAAK,IACL,SAAS,EAAE,sBAAY,EACvB,GAAG,EAAE,KAAK,EACV,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACZ,OAAO,EAAE,KAAK,IAAI,KAAK,GACtB,CACF,EAR4C,CAQ5C,CAAC,CAEa,CACjB,CAAC;AACH,CAAC,CAAC;AAEF,kBAAe,UAAU,CAAC","file":"ColorGroup.js","sourcesContent":["import * as React from 'react';\r\nimport {WrappedFieldProps, Field} from 'redux-form';\r\n\r\nimport ColorElement from './ColorElement';\r\n\r\n\r\ntype IElementProps = WrappedFieldProps & React.InputHTMLAttributes<HTMLInputElement> & {\r\n\tcolors: Array<string>\r\n};\r\n\r\nconst ColorGroup: React.FC<IElementProps> = (props) => {\r\n\tconst {colors, input: {value, name}} = props;\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tcolors.map((color: string, index: number) => (\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tcomponent={ColorElement}\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\tchecked={value == color}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default ColorGroup;\r\n"]}