{"version":3,"sources":["components/FormElements/InputElement.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAM/B,IAAM,YAAY,GAA4B,UAAC,KAAK;IAC5C,IAAA,yBAAQ,EAAE,iBAAI,EAAE,+BAAW,EAAE,2BAAS,EAAE,gBAA8B,EAAtB,gBAAK,EAAE,cAAI,EAAE,sBAAS,CAAU;IAEvF,OAAO,CACN,6BAAK,SAAS,EAAE,YAAU,SAAW;QACpC,+BACC,SAAS,EAAC,aAAa,EACvB,QAAQ,EAAE,QAAQ,EAClB,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACZ,IAAI,EAAE,IAAI,EACV,QAAQ,EAAE,QAAQ,GAAG;QAEtB,+BAAO,SAAS,EAAC,cAAc;YAC9B,kCAAO,WAAW,CAAQ;YACzB,QAAQ,IAAI,8BAAM,SAAS,EAAC,KAAK,QAAS,CACpC;QAER,6BAAK,SAAS,EAAC,aAAa,GAAE,CACzB,CACN,CAAC;AACH,CAAC,CAAC;AAEF,kBAAe,YAAY,CAAC","file":"InputElement.js","sourcesContent":["import * as React from 'react';\r\nimport {WrappedFieldProps} from 'redux-form';\r\n\r\n\r\ntype IElementProps = WrappedFieldProps & React.InputHTMLAttributes<HTMLInputElement>;\r\n\r\nconst InputElement: React.FC<IElementProps> = (props) => {\r\n\tconst {required, type, placeholder, className, input: {value, name, onChange}} = props;\r\n\r\n\treturn (\r\n\t\t<div className={`input  ${className}`}>\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"input__elem\"\r\n\t\t\t\trequired={required}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tname={name}\r\n\t\t\t\tonChange={onChange}/>\r\n\r\n\t\t\t<label className=\"input__label\">\r\n\t\t\t\t<span>{placeholder}</span>\r\n\t\t\t\t{required && <span className=\"red\">*</span>}\r\n\t\t\t</label>\r\n\r\n\t\t\t<div className=\"input__line\"/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InputElement;\r\n"]}