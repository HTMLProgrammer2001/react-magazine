{"version":3,"sources":["components/FormElements/SizeElement.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,yCAAqD;AACrD,yCAA2B;AAC3B,2CAAoD;AAIpD,IAAM,kBAAkB,GAAG,UAAC,QAAkB,EAAE,QAAyC,IAAK,OAAA,CAAC;IAC9F,WAAW,EAAE,UAAC,IAAY,EAAE,QAAgB;QAC3C,IAAI,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;QAC/C,QAAQ,CAAC,mBAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;IACpD,CAAC;CACD,CAAC,EAL4F,CAK5F,CAAC;AAEH,IAAM,SAAS,GAAG,qBAAO,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;AAWpD,IAAM,WAAW,GAA4B,UAAC,KAAK;;IAC3C,IAAA,2BAAS,EAAE,yBAAQ,EAAE,iBAAI,EAAE,uBAAO,EAAU,uBAAI,CAAW;IAElE,IAAM,SAAS,GAAG,QAAQ,IAAI,SAAS,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC;IAE1E,IAAM,OAAO,GAAG,oBAAC,CAAI,SAAS,eAAS,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAE;QAClE,GAAI,SAAS,iBAAc,IAAG,OAAO;YACpC,CAAC;IAEH,OAAO,CACN,4BACC,SAAS,EAAE,OAAO,EAClB,OAAO,EAAE,cAAM,OAAA,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,EAA7B,CAA6B,IAE3C,IAAI,CACD,CACL,CAAC;AACH,CAAC,CAAC;AAEF,kBAAe,SAAS,CAAC,WAAW,CAAC,CAAC","file":"SizeElement.js","sourcesContent":["import * as React from 'react';\r\nimport {WrappedFieldProps, change} from 'redux-form';\r\nimport c from 'classnames';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch, ownProps: IOwnProps & {checked: boolean }) => ({\r\n\tchangeValue: (name: string, newValue: string) => {\r\n\t\tlet newSize = ownProps.checked ? '' : newValue;\r\n\t\tdispatch(change(ownProps.formName, name, newSize));\r\n\t}\r\n});\r\n\r\nconst connected = connect(null, mapDispatchToProps);\r\n\r\ntype IOwnProps = {\r\n\tsize: string,\r\n\tviewType?: 'product' | 'goods',\r\n\tformName: string\r\n}\r\n\r\ntype IElementProps = WrappedFieldProps & React.InputHTMLAttributes<HTMLLIElement> &\r\n\tIOwnProps & ConnectedProps<typeof connected>;\r\n\r\nconst SizeElement: React.FC<IElementProps> = (props) => {\r\n\tconst {className, viewType, size, checked, input: {name}} = props;\r\n\r\n\tconst mainClass = viewType == 'product' ? 'product__size' : 'goods__size';\r\n\r\n\tconst classes = c(`${mainClass}-item ${className ? className : ''}`, {\r\n\t\t[`${mainClass}-item_active`]: checked\r\n\t});\r\n\r\n\treturn (\r\n\t\t<li\r\n\t\t\tclassName={classes}\r\n\t\t\tonClick={() => props.changeValue(name, size)}\r\n\t\t>\r\n\t\t\t{size}\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default connected(SizeElement);\r\n"]}