{"version":3,"sources":["components/FormElements/ColorElement.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,yCAAqD;AACrD,yCAA2B;AAC3B,2CAAoD;AAIpD,IAAM,kBAAkB,GAAG,UAAC,QAAkB,EAAE,QAAmB,IAAK,OAAA,CAAC;IACxE,WAAW,EAAE,UAAC,IAAY,EAAE,QAAgB;QAC3C,QAAQ,CAAC,mBAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;IACrD,CAAC;CACD,CAAC,EAJsE,CAItE,CAAC;AAEH,IAAM,SAAS,GAAG,qBAAO,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;AAUpD,IAAM,YAAY,GAA4B,UAAC,KAAK;IAC5C,IAAA,2BAAS,EAAE,mBAAK,EAAE,uBAAO,EAAU,uBAAI,CAAW;IAEzD,IAAM,OAAO,GAAG,oBAAC,CAAC,wBAAqB,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAE,EAAE;QACpE,0BAA0B,EAAE,OAAO;KACnC,CAAC,CAAC;IAEH,OAAO,CACN,6BACC,SAAS,EAAE,OAAO,EAClB,KAAK,EAAE,EAAC,UAAU,EAAE,KAAK,EAAC,EAC1B,OAAO,EACN;YACC,IAAI,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;YAEpC,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACnC,CAAC,GAED,CACF,CAAC;AACH,CAAC,CAAC;AAEF,kBAAe,SAAS,CAAC,YAAY,CAAC,CAAC","file":"ColorElement.js","sourcesContent":["import * as React from 'react';\r\nimport {WrappedFieldProps, change} from 'redux-form';\r\nimport c from 'classnames';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch, ownProps: IOwnProps) => ({\r\n\tchangeValue: (name: string, newValue: string) => {\r\n\t\tdispatch(change(ownProps.formName, name, newValue));\r\n\t}\r\n});\r\n\r\nconst connected = connect(null, mapDispatchToProps);\r\n\r\ntype IOwnProps = {\r\n\tcolor: string,\r\n\tformName: string\r\n};\r\n\r\ntype IElementProps = WrappedFieldProps & React.InputHTMLAttributes<HTMLInputElement> & IOwnProps\r\n\t& ConnectedProps<typeof connected>;\r\n\r\nconst ColorElement: React.FC<IElementProps> = (props) => {\r\n\tconst {className, color, checked, input: {name}} = props;\r\n\r\n\tconst classes = c(`goods__color-item ${className ? className : ''}`, {\r\n\t\t'goods__color-item_active': checked\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={classes}\r\n\t\t\tstyle={{background: color}}\r\n\t\t\tonClick={\r\n\t\t\t\t() => {\r\n\t\t\t\t\tlet newColor = checked ? '' : color;\r\n\r\n\t\t\t\t\tprops.changeValue(name, newColor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default connected(ColorElement);\r\n"]}