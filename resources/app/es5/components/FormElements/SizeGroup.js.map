{"version":3,"sources":["components/FormElements/SizeGroup.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,yCAAoD;AAEpD,6CAAwC;AAOxC,IAAM,SAAS,GAA4B,UAAC,KAAK;IACzC,IAAA,mBAAK,EAAE,gBAAoB,EAAZ,gBAAK,EAAE,cAAK,CAAU;IAE5C,OAAO,CACN,4BAAI,SAAS,EAAC,aAAa,IAEzB,KAAK,CAAC,GAAG,CAAC,UAAC,IAAY,EAAE,KAAa,IAAK,OAAA,CAC1C,oBAAC,kBAAK,IACL,SAAS,EAAE,qBAAW,EACtB,GAAG,EAAE,KAAK,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,KAAK,IAAI,IAAI,GACrB,CACF,EAR0C,CAQ1C,CAAC,CAEC,CACL,CAAC;AACH,CAAC,CAAC;AAEF,kBAAe,SAAS,CAAC","file":"SizeGroup.js","sourcesContent":["import * as React from 'react';\r\nimport {WrappedFieldProps, Field} from 'redux-form';\r\n\r\nimport SizeElement from './SizeElement';\r\n\r\n\r\ntype IElementProps = WrappedFieldProps & React.InputHTMLAttributes<HTMLUListElement> & {\r\n\tsizes: Array<string>\r\n};\r\n\r\nconst SizeGroup: React.FC<IElementProps> = (props) => {\r\n\tconst {sizes, input: {value, name}} = props;\r\n\r\n\treturn (\r\n\t\t<ul className=\"goods__size\">\r\n\t\t\t{\r\n\t\t\t\tsizes.map((size: string, index: number) => (\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tcomponent={SizeElement}\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\tsize={size}\r\n\t\t\t\t\t\tchecked={value == size}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default SizeGroup;\r\n"]}