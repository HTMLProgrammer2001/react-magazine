{"version":3,"sources":["components/FormElements/Numeric.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,yCAAqD;AACrD,2CAAoD;AAIpD,IAAM,kBAAkB,GAAG,UAAC,QAAkB,EAAE,QAAmB,IAAK,OAAA,CAAC;IACxE,WAAW,EAAE,UAAC,IAAY,EAAE,QAAgB;QAC3C,IAAG,QAAQ,IAAI,CAAC,EAAE;YACjB,OAAO;SACP;QAED,QAAQ,CAAC,mBAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;IACrD,CAAC;CACD,CAAC,EARsE,CAQtE,CAAC;AAEH,IAAM,SAAS,GAAG,qBAAO,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;AASpD,IAAM,cAAc,GAA4B,UAAC,KAAK;IAC9C,IAAA,2BAAS,EAAE,gBAAoB,EAAZ,gBAAK,EAAE,cAAK,CAAU;IAEhD,OAAO,CACN,8BAAM,SAAS,EAAE,2BAAyB,SAAW;QACpD,8BACC,SAAS,EAAC,yBAAyB,EACnC,OAAO,EAAE,cAAM,OAAA,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,EAAlC,CAAkC,QACzC;QAET,8BAAM,SAAS,EAAC,sBAAsB,IAAE,KAAK,CAAQ;QAErD,8BAAM,SAAS,EAAC,yBAAyB,EACtC,OAAO,EAAE,cAAM,OAAA,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,EAAlC,CAAkC,QAC3C,CACH,CACP,CAAC;AACH,CAAC,CAAC;AAEF,kBAAe,SAAS,CAAC,cAAc,CAAC,CAAC","file":"Numeric.js","sourcesContent":["import * as React from 'react';\r\nimport {WrappedFieldProps, change} from 'redux-form';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch, ownProps: IOwnProps) => ({\r\n\tchangeValue: (name: string, newValue: number) => {\r\n\t\tif(newValue <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdispatch(change(ownProps.formName, name, newValue));\r\n\t}\r\n});\r\n\r\nconst connected = connect(null, mapDispatchToProps);\r\n\r\ntype IOwnProps = {\r\n\tformName: string\r\n}\r\n\r\ntype IElementProps = WrappedFieldProps & React.HTMLAttributes<HTMLDivElement>\r\n\t\t& ConnectedProps<typeof connected> & IOwnProps;\r\n\r\nconst NumericElement: React.FC<IElementProps> = (props) => {\r\n\tconst {className, input: {value, name}} = props;\r\n\r\n\treturn (\r\n\t\t<span className={`order__quantity-count ${className}`}>\r\n\t\t\t<span\r\n\t\t\t\tclassName=\"order__quantity-control\"\r\n\t\t\t\tonClick={() => props.changeValue(name, value - 1)}\r\n\t\t\t>-</span>\r\n\r\n\t\t\t<span className=\"order__quantity-elem\">{value}</span>\r\n\r\n\t\t\t<span className=\"order__quantity-control\"\r\n\t\t\t\t  onClick={() => props.changeValue(name, value + 1)}\r\n\t\t\t>+</span>\r\n\t\t</span>\r\n\t);\r\n};\r\n\r\nexport default connected(NumericElement);\r\n"]}