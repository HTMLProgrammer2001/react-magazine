{"version":3,"sources":["components/FormElements/SelectElement.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAQ/B,IAAM,aAAa,GAA4B,UAAC,KAAK;IAC7C,IAAA,2BAAS,EAAE,uBAAO,EAAE,gBAA8B,EAAtB,gBAAK,EAAE,cAAI,EAAE,sBAAS,CAAU;IAEnE,OAAO,CACN,6BAAK,SAAS,EAAC,YAAY;QAC1B,gCACC,SAAS,EAAE,uBAAqB,SAAW,EAC3C,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,QAAQ,IAGjB,OAAO,CAAC,GAAG,CAAE,UAAC,MAAc,EAAE,KAAa,IAAK,OAAA,CAC/C,gCACC,GAAG,EAAE,KAAK,EACV,KAAK,EAAE,MAAM,IAEZ,MAAM,CACC,CACT,EAP+C,CAO/C,CAAC,CAEK;QACT,2BAAG,SAAS,EAAC,kCAAkC,GAAE;QACjD,6BAAK,SAAS,EAAC,cAAc,GAAE,CAC1B,CACN,CAAC;AACH,CAAC,CAAC;AAEF,kBAAe,aAAa,CAAC","file":"SelectElement.js","sourcesContent":["import * as React from 'react';\r\nimport {WrappedFieldProps} from 'redux-form';\r\n\r\n\r\ntype IElementProps = WrappedFieldProps & React.SelectHTMLAttributes<HTMLSelectElement> & {\r\n\toptions: Array<string>\r\n};\r\n\r\nconst SelectElement: React.FC<IElementProps> = (props) => {\r\n\tconst {className, options, input: {value, name, onChange}} = props;\r\n\r\n\treturn (\r\n\t\t<div className=\"select cur\">\r\n\t\t\t<select\r\n\t\t\t\tclassName={`select__input cur ${className}`}\r\n\t\t\t\tname={name}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\toptions.map( (option: string, index: number) => (\r\n\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tvalue={option}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</select>\r\n\t\t\t<i className=\"fas fa-chevron-down select__icon\"/>\r\n\t\t\t<div className=\"select__line\"/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SelectElement;\r\n"]}