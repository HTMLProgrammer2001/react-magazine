{"version":3,"sources":["components/FormElements/MarkElement.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,yCAAqD;AACrD,2CAAoD;AAGpD,gCAA2B;AAG3B,IAAM,kBAAkB,GAAG,UAAC,QAAkB,EAAE,QAAmB,IAAK,OAAA,CAAC;IACxE,WAAW,EAAE,UAAC,IAAY,EAAE,QAAgB;QAC3C,QAAQ,CAAC,mBAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;IACrD,CAAC;CACD,CAAC,EAJsE,CAItE,CAAC;AAEH,IAAM,SAAS,GAAG,qBAAO,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;AASpD,IAAM,WAAW,GAA4B,UAAC,KAAK;IAC3C,IAAA,gBAAoB,EAAZ,gBAAK,EAAE,cAAK,CAAU;IAErC,OAAO,CACN,oBAAC,cAAI,IACJ,MAAM,EAAE,KAAK,EACb,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,UAAC,QAAgB,IAAK,OAAA,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAjC,CAAiC,GAChE,CACF,CAAC;AACH,CAAC,CAAC;AAEF,kBAAe,SAAS,CAAC,WAAW,CAAC,CAAC","file":"MarkElement.js","sourcesContent":["import * as React from 'react';\r\nimport {WrappedFieldProps, change} from 'redux-form';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\n\r\nimport Mark from '../Mark';\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch, ownProps: IOwnProps) => ({\r\n\tchangeValue: (name: string, newValue: number) => {\r\n\t\tdispatch(change(ownProps.formName, name, newValue));\r\n\t}\r\n});\r\n\r\nconst connected = connect(null, mapDispatchToProps);\r\n\r\ntype IOwnProps = {\r\n\tformName: string\r\n}\r\n\r\ntype IElementProps = WrappedFieldProps & React.HTMLAttributes<HTMLDivElement>\r\n\t& ConnectedProps<typeof connected> & IOwnProps;\r\n\r\nconst MarkElement: React.FC<IElementProps> = (props) => {\r\n\tconst {input: {value, name}} = props;\r\n\r\n\treturn (\r\n\t\t<Mark\r\n\t\t\trating={value}\r\n\t\t\tfixed={false}\r\n\t\t\tonChange={(newValue: number) => props.changeValue(name, newValue)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default connected(MarkElement);\r\n"]}