{"version":3,"sources":["components/SinglePage/Reviews/ReviewsList.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAI/B,4CAAuC;AACvC,mCAA8B;AAC9B,mDAAqE;AAcrE;IAA0B,+BAA6C;IACtE,qBAAY,KAAoB;QAAhC,YACC,kBAAM,KAAK,CAAC,SAUZ;QARA,KAAI,CAAC,KAAK,GAAG;YACZ,SAAS,EAAE,KAAK;YAChB,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,CAAC;SACR,CAAC;QAEF,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IAC1C,CAAC;IAED,uCAAiB,GAAjB;QACC,IAAI,CAAC,QAAQ,EAAE,CAAC;IACjB,CAAC;IAED,4BAAM,GAAN;QACC,OAAO,CACN,oBAAC,KAAK,CAAC,QAAQ;YACd,4BAAI,SAAS,EAAC,QAAQ,EAAC,KAAK,EAAC,QAAQ,GAAE;YACvC,6BAAK,SAAS,EAAC,sBAAsB;gBACpC;oBAAM,IAAI,CAAC,KAAK,CAAC,KAAK;gCAAgB;gBACtC,oBAAC,wBAAc,IAAC,QAAQ,EAAE,UAAC,IAAyB,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,GAAG,CACxE;YAEN,6BAAK,SAAS,EAAC,qBAAqB,IAClC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAE,UAAC,OAAO,IAAK,OAAA,CACtC,oBAAC,gBAAM,IACN,OAAO,EAAE,OAAO,EAChB,GAAG,EAAE,OAAO,CAAC,EAAE,GACd,CACF,EALsC,CAKtC,CAAE,CACE;YAEN,6BAAK,SAAS,EAAC,MAAM,IAEnB,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAC/C,KAAK,CAAC,CAAC;gBACP,gCAAQ,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAC,YAAY,EAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,IACjE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,CAC1C,CAEN,CACU,CACjB,CAAC;IACH,CAAC;IAEK,8BAAQ,GAAd;;;;;;wBACC,IAAI,CAAC,QAAQ,CAAC;4BACb,SAAS,EAAE,IAAI;yBACf,CAAC,CAAC;wBAEgB,WAAM,aAAG,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAA;;wBAAtF,YAAY,GAAG,SAAuE;wBAE1F,IAAG,aAAG,CAAC,OAAO,CAAC,YAAY,CAAC,EAAC;4BAC5B,IAAI,CAAC,QAAQ,CAAC;gCACb,KAAK,EAAE,YAAY,CAAC,QAAS,CAAC,IAAI;6BAClC,CAAC,CAAC;yBACH;6BACG;4BACH,IAAI,CAAC,QAAQ,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC;gCACxB,KAAK,EAAG,YAAkC,CAAC,KAAK;gCAChD,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAE,YAAkC,CAAC,QAAQ,CAAC;6BAC5E,CAAC,EAHsB,CAGtB,CAAC,CAAC;yBACJ;wBAED,IAAI,CAAC,QAAQ,CAAC;4BACb,SAAS,EAAE,KAAK;yBAChB,CAAC,CAAC;;;;;KACH;IACF,kBAAC;AAAD,CAxEA,AAwEC,CAxEyB,KAAK,CAAC,SAAS,GAwExC;AAED,kBAAe,WAAW,CAAC","file":"ReviewsList.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport {IComment} from '../../../Interfaces/IComment';\r\nimport {ICommentsResponse} from '../../../Interfaces/Responses/ICommentsResponse';\r\nimport API from '../../../Helpers/API';\r\nimport Review from './Review';\r\nimport ReviewSortForm, {IReviewSortFormData} from './ReviewSortForm';\r\n\r\n\r\ntype IReviewsProps = {\r\n\tproductID: number\r\n}\r\n\r\ntype IReviewsState = {\r\n\tisLoading: boolean,\r\n\terror: string,\r\n\tcomments: Array<IComment>,\r\n\ttotal: number\r\n}\r\n\r\nclass ReviewsList extends React.Component<IReviewsProps, IReviewsState>{\r\n\tconstructor(props: IReviewsProps){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tisLoading: false,\r\n\t\t\terror: '',\r\n\t\t\tcomments: [],\r\n\t\t\ttotal: 0\r\n\t\t};\r\n\r\n\t\tthis.loadMore = this.loadMore.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tthis.loadMore();\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<hr className=\"my-pad\" color=\"silver\"/>\r\n\t\t\t\t<div className=\"reviews-list__header\">\r\n\t\t\t\t\t<div>{this.state.total} comments</div>\r\n\t\t\t\t\t<ReviewSortForm onSubmit={(vals: IReviewSortFormData) => console.log(vals)}/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"reviews-list my-pad\">\r\n\t\t\t\t\t{this.state.comments.map( (comment) => (\r\n\t\t\t\t\t\t<Review\r\n\t\t\t\t\t\t\tcomment={comment}\r\n\t\t\t\t\t\t\tkey={comment.id}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) )}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"load\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.total == this.state.comments.length ?\r\n\t\t\t\t\t\t\tfalse :\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"load__more\" onClick={this.loadMore}>\r\n\t\t\t\t\t\t\t\t{this.state.isLoading ? 'Loading...' : 'Load More'}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n\tasync loadMore(){\r\n\t\tthis.setState({\r\n\t\t\tisLoading: true\r\n\t\t});\r\n\r\n\t\tlet commentsResp = await API.getComments(this.props.productID, this.state.comments.length);\r\n\r\n\t\tif(API.isError(commentsResp)){\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: commentsResp.response!.data\r\n\t\t\t});\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.setState((prev) => ({\r\n\t\t\t\ttotal: (commentsResp as ICommentsResponse).total,\r\n\t\t\t\tcomments: prev.comments.concat((commentsResp as ICommentsResponse).comments)\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tisLoading: false\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default ReviewsList;\r\n"]}