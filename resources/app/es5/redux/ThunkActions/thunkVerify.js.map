{"version":3,"sources":["redux/ThunkActions/thunkVerify.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,0DAAiF;AACjF,yCAAoC;AAKpC,IAAM,WAAW,GAAG,UAAC,EAAU;IAC9B,OAAA,UAAO,QAA8C;;;;;oBACpD,QAAQ,CAAC,2BAAW,EAAE,CAAC,CAAC;oBAED,WAAM,aAAG,CAAC,UAAU,CAAC,EAAE,CAAC,EAAA;;oBAAzC,cAAc,GAAG,SAAwB;oBAE/C,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;oBAE5B,IAAG,aAAG,CAAC,OAAO,CAAC,cAAc,CAAC,EAAC;wBAC9B,QAAQ,CAAC,2BAAW,CAAC,cAAc,CAAC,QAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC7D;yBACG;wBACH,QAAQ,CAAC,6BAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;qBAChD;;;;SACD;AAbD,CAaC,CAAC;AAEH,kBAAe,WAAW,CAAC","file":"thunkVerify.js","sourcesContent":["import {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\n\r\nimport {RootState} from '../Reducers';\r\nimport {VerifyActions} from '../Reducers/verify';\r\nimport {verifyStart, verifyError, verifySuccess} from '../Actions/verifyActions';\r\nimport API from '../../Helpers/API';\r\n\r\n\r\nexport type RegisterThunkAction = ThunkAction<void, RootState, unknown, VerifyActions>;\r\n\r\nconst thunkVerify = (id: string): RegisterThunkAction =>\r\n\tasync (dispatch: ThunkDispatch<{}, {}, VerifyActions>) => {\r\n\t\tdispatch(verifyStart());\r\n\r\n\t\tconst verifyResponse = await API.verifyUser(id);\r\n\r\n\t\tconsole.log(verifyResponse);\r\n\r\n\t\tif(API.isError(verifyResponse)){\r\n\t\t\tdispatch(verifyError(verifyResponse.response!.data.message));\r\n\t\t}\r\n\t\telse{\r\n\t\t\tdispatch(verifySuccess(verifyResponse.success));\r\n\t\t}\r\n\t};\r\n\r\nexport default thunkVerify;\r\n"]}