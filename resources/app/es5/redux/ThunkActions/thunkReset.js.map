{"version":3,"sources":["redux/ThunkActions/thunkReset.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,yCAAmD;AAKnD,wDAA6E;AAC7E,yCAAoC;AAKpC,IAAM,UAAU,GAAG,UAAC,IAAoB,EAAE,QAAgB;IACzD,OAAA,UAAO,QAA6C;;;;;oBACnD,QAAQ,CAAC,yBAAU,EAAE,CAAC,CAAC;oBAEH,WAAM,aAAG,CAAC,SAAS,CAAC,IAAI,CAAC,EAAA;;oBAAvC,WAAW,GAAG,SAAyB;oBAE7C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;oBAEzB,IAAG,aAAG,CAAC,OAAO,CAAC,WAAW,CAAC,EAAC;wBAC3B,IAAG,WAAW,CAAC,QAAS,CAAC,IAAI,CAAC,MAAM,EAAC;4BACpC,QAAQ,CAAC,6BAAgB,CACxB,QAAQ,EACR,WAAW,CAAC,QAAS,CAAC,IAAI,CAAC,MAAM,EACjC,WAAW,CAAC,QAAS,CAAC,IAAI,CAAC,OAAO,CAClC,CAAC,CAAC;yBACH;6BACG;4BACH,QAAQ,CAAC,yBAAU,CAAC,WAAW,CAAC,QAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;yBACzD;qBACD;yBACG;wBACH,QAAQ,CAAC,kBAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC1B,QAAQ,CAAC,2BAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC5C;;;;SACD;AAvBD,CAuBC,CAAC;AAEH,kBAAe,UAAU,CAAC","file":"thunkReset.js","sourcesContent":["import {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\nimport {updateSyncErrors, reset} from 'redux-form';\r\n\r\nimport {IResetFormData} from '../../components/ResetPage/ResetForm';\r\nimport {RootState} from '../Reducers';\r\nimport {ResetActions} from '../Reducers/reset';\r\nimport {resetError, resetStart, resetSuccess} from '../Actions/resetActions';\r\nimport API from '../../Helpers/API';\r\n\r\n\r\nexport type ResetThunkAction = ThunkAction<void, RootState, unknown, ResetActions>;\r\n\r\nconst thunkReset = (vals: IResetFormData, formName: string): ResetThunkAction =>\r\n\tasync (dispatch: ThunkDispatch<{}, {}, ResetActions>) => {\r\n\t\tdispatch(resetStart());\r\n\r\n\t\tconst regResponse = await API.resetUser(vals);\r\n\r\n\t\tconsole.log(regResponse);\r\n\r\n\t\tif(API.isError(regResponse)){\r\n\t\t\tif(regResponse.response!.data.errors){\r\n\t\t\t\tdispatch(updateSyncErrors(\r\n\t\t\t\t\tformName,\r\n\t\t\t\t\tregResponse.response!.data.errors,\r\n\t\t\t\t\tregResponse.response!.data.message\r\n\t\t\t\t));\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tdispatch(resetError(regResponse.response!.data.message));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tdispatch(reset(formName));\r\n\t\t\tdispatch(resetSuccess(regResponse.success));\r\n\t\t}\r\n\t};\r\n\r\nexport default thunkReset;\r\n"]}