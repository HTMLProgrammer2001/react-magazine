{"version":3,"sources":["redux/ThunkActions/thunkLogin.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,yCAAmD;AAKnD,wDAA6E;AAC7E,yCAAoC;AACpC,sDAA2D;AAK3D,IAAM,UAAU,GAAG,UAAC,IAAoB,EAAE,QAAgB;IACzD,OAAA,UAAO,QACiC;;;;;oBACvC,QAAQ,CAAC,yBAAU,EAAE,CAAC,CAAC;oBAED,WAAM,aAAG,CAAC,SAAS,CAAC,IAAI,CAAC,EAAA;;oBAAzC,aAAa,GAAG,SAAyB;oBAE/C,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oBAE3B,IAAG,aAAG,CAAC,OAAO,CAAC,aAAa,CAAC,EAAC;wBAC7B,IAAG,aAAa,CAAC,QAAS,CAAC,IAAI,CAAC,MAAM,EAAC;4BACtC,QAAQ,CAAC,6BAAgB,CACxB,QAAQ,EACR,aAAa,CAAC,QAAS,CAAC,IAAI,CAAC,MAAM,EACnC,aAAa,CAAC,QAAS,CAAC,IAAI,CAAC,OAAO,CACpC,CAAC,CAAC;yBACH;6BACG;4BACH,QAAQ,CAAC,yBAAU,CAAC,aAAa,CAAC,QAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;yBAC3D;qBACD;yBACG;wBACH,QAAQ,CAAC,kBAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC1B,QAAQ,CAAC,iCAAmB,CAAC,aAAa,CAAC,CAAC,CAAC;wBAC7C,QAAQ,CAAC,2BAAY,EAAE,CAAC,CAAC;qBACzB;;;;SACD;AAzBD,CAyBC,CAAC;AAEH,kBAAe,UAAU,CAAC","file":"thunkLogin.js","sourcesContent":["import {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\nimport {updateSyncErrors, reset} from 'redux-form';\r\n\r\nimport {ILoginFormData} from '../../components/LoginPage/LoginForm';\r\nimport {RootState} from '../Reducers';\r\nimport {LoginActions} from '../Reducers/login';\r\nimport {loginError, loginStart, loginSuccess} from '../Actions/loginActions';\r\nimport API from '../../Helpers/API';\r\nimport {loadUserSuccessfull} from '../Actions/userActions';\r\n\r\n\r\nexport type LoginThunkAction = ThunkAction<void, RootState, unknown, LoginActions>;\r\n\r\nconst thunkLogin = (vals: ILoginFormData, formName: string): LoginThunkAction =>\r\n\tasync (dispatch: ThunkDispatch<{}, {}, LoginActions |\r\n\t\tReturnType<typeof loadUserSuccessfull>>) => {\r\n\t\tdispatch(loginStart());\r\n\r\n\t\tconst loginResponse = await API.loginUser(vals);\r\n\r\n\t\tconsole.log(loginResponse);\r\n\r\n\t\tif(API.isError(loginResponse)){\r\n\t\t\tif(loginResponse.response!.data.errors){\r\n\t\t\t\tdispatch(updateSyncErrors(\r\n\t\t\t\t\tformName,\r\n\t\t\t\t\tloginResponse.response!.data.errors,\r\n\t\t\t\t\tloginResponse.response!.data.message\r\n\t\t\t\t));\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tdispatch(loginError(loginResponse.response!.data.message));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tdispatch(reset(formName));\r\n\t\t\tdispatch(loadUserSuccessfull(loginResponse));\r\n\t\t\tdispatch(loginSuccess());\r\n\t\t}\r\n\t};\r\n\r\nexport default thunkLogin;\r\n"]}