{"version":3,"sources":["redux/ThunkActions/register.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,8DAAyF;AACzF,yCAAoC;AAKpC,IAAM,aAAa,GAAG,UAAC,IAAuB,IAA0B,OAAA,UAAM,QAAQ;;;;;gBACrF,QAAQ,CAAC,+BAAa,EAAE,CAAC,CAAC;gBAEN,WAAM,aAAG,CAAC,YAAY,CAAC,IAAI,CAAC,EAAA;;gBAA1C,WAAW,GAAG,SAA4B;gBAEhD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBAEzB,IAAG,aAAG,CAAC,OAAO,CAAC,WAAW,CAAC,EAAC;oBAC3B,QAAQ,CAAC,+BAAa,CAAC,OAAO,CAAC,CAAC,CAAC;iBACjC;qBACG;oBACH,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;iBAC9D;;;;KACD,EAbuE,CAavE,CAAC;AAEF,kBAAe,aAAa,CAAC","file":"register.js","sourcesContent":["import {ThunkAction} from 'redux-thunk';\r\nimport {Action} from 'redux';\r\n\r\nimport {IRegisterFormData} from '../../components/RegisterPage/RegisterForm';\r\nimport {RootState} from '../Reducers';\r\nimport {registerError, registerStart, registerSuccess} from '../Actions/registerActions';\r\nimport API from '../../Helpers/API';\r\n\r\n\r\nexport type RegisterThunkAction = ThunkAction<void, RootState, unknown, Action<any>>;\r\n\r\nconst thunkRegister = (vals: IRegisterFormData): RegisterThunkAction => async dispatch => {\r\n\tdispatch(registerStart());\r\n\r\n\tconst regResponse = await API.registerUser(vals);\r\n\r\n\tconsole.log(regResponse);\r\n\r\n\tif(API.isError(regResponse)){\r\n\t\tdispatch(registerError('Error'));\r\n\t}\r\n\telse{\r\n\t\tdispatch(regResponse.error ? regResponse.error : regResponse);\r\n\t}\r\n};\r\n\r\nexport default thunkRegister;\r\n"]}