{"version":3,"sources":["redux/Reducers/register.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAGA,8CAAoF;AAWpF,IAAM,YAAY,GAAkB;IACnC,KAAK,EAAE,IAAI;IACX,SAAS,EAAE,KAAK;CAChB,CAAC;AAEF,IAAM,eAAe,GAAG,UAAC,KAAmC,EAAE,MAAuB;IAA5D,sBAAA,EAAA,oBAAmC;IAE3D,QAAQ,MAAM,CAAC,IAAI,EAAE;QACrB,KAAK,4BAAc;YAClB,6BAAW,KAAK,KAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,IAAE;QAEjD,KAAK,kCAAoB;YACxB,6BAAW,KAAK,KAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,IAAE;QAElD,KAAK,4BAAc;YAClB,6BAAW,KAAK,KAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,IAAE;KACzD;IAED,OAAO,KAAK,CAAC;AACd,CAAC,CAAC;AAEF,kBAAe,eAAe,CAAC","file":"register.js","sourcesContent":["//My components\r\nimport {ICartItem} from '../../Interfaces/ICartItem';\r\nimport * as actionCreators from '../Actions/registerActions';\r\nimport {REGISTER_ERROR, REGISTER_SUCCESSFULL, REGISTER_START} from '../actionTypes';\r\n\r\n\r\ntype InferValuesType<T> = T extends {[key: string]: infer U} ? U : never;\r\ntype RegisterActions = ReturnType<InferValuesType<typeof actionCreators>>;\r\n\r\nexport type RegisterState = {\r\n\terror: string | null,\r\n\tisLoading: boolean\r\n};\r\n\r\nconst initialState: RegisterState = {\r\n\terror: null,\r\n\tisLoading: false\r\n};\r\n\r\nconst registerReducer = (state: RegisterState = initialState, action: RegisterActions):\r\n\tRegisterState => {\r\n\tswitch (action.type) {\r\n\tcase REGISTER_START:\r\n\t\treturn {...state, error: null, isLoading: true};\r\n\r\n\tcase REGISTER_SUCCESSFULL:\r\n\t\treturn {...state, isLoading: false, error: null};\r\n\r\n\tcase REGISTER_ERROR:\r\n\t\treturn {...state, error: action.error, isLoading: false};\r\n\t}\r\n\r\n\treturn state;\r\n};\r\n\r\nexport default registerReducer;\r\n"]}