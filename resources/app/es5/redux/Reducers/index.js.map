{"version":3,"sources":["redux/Reducers/index.ts"],"names":[],"mappings":";;AAAA,+BAAsC;AACtC,yCAAkD;AAElD,+BAAiC;AACjC,uCAAyC;AACzC,uCAAyC;AACzC,mCAAqC;AACrC,iCAAmC;AACnC,+BAAiC;AACjC,iCAAmC;AAGnC,IAAM,YAAY,GAAG,uBAAe,CAAC;IACpC,IAAI,EAAE,cAAW;IACjB,QAAQ,EAAE,kBAAe;IACzB,QAAQ,EAAE,kBAAe;IACzB,MAAM,EAAE,gBAAa;IACrB,KAAK,EAAE,eAAY;IACnB,IAAI,EAAE,cAAW;IACjB,KAAK,EAAE,eAAY;IACnB,IAAI,EAAE,oBAAW;CACjB,CAAC,CAAC;AAGH,kBAAe,YAAY,CAAC","file":"index.js","sourcesContent":["import {combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\nimport cartReducer from './cart';\r\nimport categoryReducer from './category';\r\nimport registerReducer from './register';\r\nimport verifyReducer from './verify';\r\nimport loginReducer from './login';\r\nimport userReducer from './user';\r\nimport resetReducer from './reset';\r\n\r\n\r\nconst storeReducer = combineReducers({\r\n\tcart: cartReducer,\r\n\tcategory: categoryReducer,\r\n\tregister: registerReducer,\r\n\tverify: verifyReducer,\r\n\tlogin: loginReducer,\r\n\tuser: userReducer,\r\n\treset: resetReducer,\r\n\tform: formReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof storeReducer>;\r\nexport default storeReducer;\r\n\r\ntype ActionCreators = {[key: string]: (...args: any) => any};\r\ntype PropertiesTypes<T> = T extends {[key: string]: infer U} ? U : never;\r\nexport type InferActionTypes<T extends ActionCreators> = ReturnType<PropertiesTypes<T>>;\r\n"]}