{"version":3,"sources":["redux/Reducers/cart.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAGA,8CAAiE;AAQjE,IAAM,YAAY,GAAc,EAAE,CAAC;AAEnC,IAAM,WAAW,GAAG,UAAC,KAA+B,EAAE,MAAmB;IAApD,sBAAA,EAAA,oBAA+B;IACnD,QAAQ,MAAM,CAAC,IAAI,EAAE;QACrB,KAAK,sBAAQ;YACZ,IAAI,UAAQ,GAA0B,KAAK,CAAC,IAAI,CAAC,UAAC,IAAe,IAAK,OAAA,CACrE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;mBACzC,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK;mBAClC,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CACnC,EAJqE,CAIrE,CAAC,CAAC;YAEH,IAAG,UAAQ,EAAE;gBACZ,OAAO,KAAK,CAAC,GAAG,CAAC,UAAC,IAAe,IAAK,OAAA,CACrC,IAAI,IAAI,UAAQ,CAAC,CAAC,uBAEb,IAAI,KACP,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EACxC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,OAAO,IAEhC,CAAC,CAAC,IAAI,CACP,EARqC,CAQrC,CAAC,CAAC;aACH;iBACI;gBACJ,sBAAW,KAAK,GAAE,MAAM,CAAC,OAAO,GAAE;aAClC;QAEF,KAAK,yBAAW;YACf,sBAAW,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,EAAK,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE;QAEhF,KAAK,wBAAU;YACd,OAAO,EAAE,CAAC;KACV;IAED,OAAO,KAAK,CAAC;AACd,CAAC,CAAC;AAEF,kBAAe,WAAW,CAAC","file":"cart.js","sourcesContent":["//My components\r\nimport {ICartItem} from '../../Interfaces/ICartItem';\r\nimport * as actionCreators from '../Actions/cartActions';\r\nimport {CART_ADD, CART_REMOVE, CART_RESET} from '../actionTypes';\r\nimport {InferActionTypes} from './index';\r\n\r\n\r\ntype CartActions = InferActionTypes<typeof actionCreators>;\r\n\r\nexport type CartState = Array<ICartItem>;\r\n\r\nconst initialState: CartState = [];\r\n\r\nconst cartReducer = (state: CartState = initialState, action: CartActions): CartState => {\r\n\tswitch (action.type) {\r\n\tcase CART_ADD:\r\n\t\tlet cartItem: ICartItem | undefined = state.find((item: ICartItem) => (\r\n\t\t\titem.product.id == action.payload.product.id\r\n\t\t\t&& item.color == action.payload.color\r\n\t\t\t&& item.size == action.payload.size\r\n\t\t));\r\n\r\n\t\tif(cartItem) {\r\n\t\t\treturn state.map((item: ICartItem) => (\r\n\t\t\t\titem == cartItem ?\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tcount: item.count + action.payload.count,\r\n\t\t\t\t\t\tproduct: action.payload.product\r\n\t\t\t\t\t}\r\n\t\t\t\t\t: item\r\n\t\t\t));\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn [...state, action.payload];\r\n\t\t}\r\n\r\n\tcase CART_REMOVE:\r\n\t\treturn [...state.slice(0, action.payload), ...state.slice(action.payload + 1)];\r\n\r\n\tcase CART_RESET:\r\n\t\treturn [];\r\n\t}\r\n\r\n\treturn state;\r\n};\r\n\r\nexport default cartReducer;\r\n"]}