{"version":3,"sources":["Helpers/API.ts"],"names":[],"mappings":"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","file":"API.js","sourcesContent":["import axios, {AxiosError, AxiosResponse} from 'axios';\r\n\r\nimport {IProductsResponse} from '../Interfaces/Responses/IProductsResponse';\r\nimport {IFullProduct} from '../Interfaces/IFullProduct';\r\nimport {ICommentsResponse} from '../Interfaces/Responses/ICommentsResponse';\r\nimport {IChangeLikeResponse} from '../Interfaces/Responses/IChangeLikeResponse';\r\nimport {IRegisterFormData} from '../components/RegisterPage/RegisterForm';\r\nimport {ILoginFormData} from '../components/LoginPage/LoginForm';\r\nimport {ILoadUserResponse} from '../Interfaces/Responses/ILoadUserResponse';\r\n\r\n\r\nclass API{\r\n\tstatic clientAPI = axios.create({\r\n\t\tbaseURL: 'http://localhost:8000/api',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t}\r\n\t});\r\n\r\n\tstatic async getProducts(offset?: number): Promise<IProductsResponse | AxiosError>{\r\n\t\tlet body = {\r\n\t\t\tpage: offset\r\n\t\t};\r\n\t\t\r\n\t\tlet response: AxiosResponse;\r\n\r\n\t\ttry {\r\n\t\t\tresponse = await this.clientAPI.get<Array<IProductsResponse>>('/getProducts', {\r\n\t\t\t\tparams: body\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\treturn err as AxiosError;\r\n\t\t}\r\n\r\n\t\treturn response.data;\r\n\t}\r\n\r\n\tstatic async getProductInfo(slug: string): Promise<IFullProduct | AxiosError>{\r\n\t\tlet response: AxiosResponse;\r\n\r\n\t\ttry {\r\n\t\t\tresponse = await this.clientAPI.get<IFullProduct>(`/products/${slug}`);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\treturn err as AxiosError;\r\n\t\t}\r\n\r\n\t\treturn response.data;\r\n\t}\r\n\r\n\tstatic async getComments(productID: number, offset: number = 1):\r\n\t\tPromise<ICommentsResponse | AxiosError>{\r\n\r\n\t\tlet response: AxiosResponse;\r\n\r\n\t\ttry {\r\n\t\t\tresponse = await this.clientAPI.get<ICommentsResponse>(\r\n\t\t\t\t`/products/${productID}/getComments`, {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tpage: offset\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\treturn err as AxiosError;\r\n\t\t}\r\n\r\n\t\treturn response.data;\r\n\t}\r\n\r\n\tstatic async changeLike(productID: number): Promise<IChangeLikeResponse | AxiosError>{\r\n\t\tlet response: AxiosResponse;\r\n\r\n\t\ttry {\r\n\t\t\tresponse = await this.clientAPI.post<IChangeLikeResponse>(\r\n\t\t\t\t`/products/${productID}/changeLike`\r\n\t\t\t);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\treturn err as AxiosError;\r\n\t\t}\r\n\r\n\t\treturn response.data;\r\n\t}\r\n\r\n\tstatic async registerUser(vals: IRegisterFormData): Promise<{message: string} | AxiosError>{\r\n\t\tlet response: AxiosResponse;\r\n\r\n\t\ttry {\r\n\t\t\tresponse = await this.clientAPI.post<{message: string}>('/register', vals);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\t\t\treturn err as AxiosError;\r\n\t\t}\r\n\r\n\t\treturn response.data;\r\n\t}\r\n\r\n\tstatic async verifyUser(id: string): Promise<{success: string} | AxiosError>{\r\n\t\tlet response: AxiosResponse;\r\n\r\n\t\ttry{\r\n\t\t\tresponse = await this.clientAPI.get<{success: string}>(`/verify/${id}`);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\r\n\t\t\treturn err as AxiosError;\r\n\t\t}\r\n\r\n\t\treturn response.data;\r\n\t}\r\n\r\n\tstatic async loginUser(vals: ILoginFormData): Promise<ILoadUserResponse | AxiosError>{\r\n\t\tlet response: AxiosResponse;\r\n\r\n\t\ttry {\r\n\t\t\tresponse = await this.clientAPI.post<{message: string}>('/login', vals);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\t\t\treturn err as AxiosError;\r\n\t\t}\r\n\r\n\t\treturn response.data;\r\n\t}\r\n\r\n\tstatic async logoutUser(): Promise<AxiosError>{\r\n\t\tlet response: AxiosResponse;\r\n\r\n\t\ttry {\r\n\t\t\tresponse = await this.clientAPI.post<{success: string}>('/logout');\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\t\t\treturn err as AxiosError;\r\n\t\t}\r\n\r\n\t\treturn response.data;\r\n\t}\r\n\r\n\tstatic isError(arg: any): arg is AxiosError{\r\n\t\treturn 'response' in arg;\r\n\t}\r\n}\r\n\r\nexport default API;\r\n"]}